steps:
  # Docker Build
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t',
           'us-central1-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/${_IMAGE_NAME}:${SHORT_SHA}', '.']

  # Docker push to Google Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push',  'us-central1-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/${_IMAGE_NAME}:${SHORT_SHA}']

  # Update environment variables
  - name: 'bash'
    args: ['-c', 'sed', '-e',  's:${PROJECT_ID}:'"$PROJECT_ID"':g', '-e', 's:${_ARTIFACT_REGISTRY_REPO}:'"$_ARTIFACT_REGISTRY_REPO"':g', '-e', 's:${_IMAGE_NAME}:'"$_IMAGE_NAME"':g', '-e', 's:${SHORT_SHA}:'"$SHORT_SHA"':g', 'deployment.yaml']
    env:
      - 'SHORT_SHA=${SHORT_SHA}'
      - 'PROJECT_ID=${PROJECT_ID}'
      - '_ARTIFACT_REGISTRY_REPO=${_ARTIFACT_REGISTRY_REPO}'
      - _IMAGE_NAME=${_IMAGE_NAME}

  # apply deployment.yaml
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'deployment.yaml']
    env:
      - 'PROJECT_ID=${PROJECT_ID}'
      - '_ARTIFACT_REGISTRY_REPO=${_ARTIFACT_REGISTRY_REPO}'
      - 'CLOUDSDK_COMPUTE_ZONE=us-central1-c'
      - 'CLOUDSDK_CONTAINER_CLUSTER=testcluster'

  # update image
  # - name: 'gcr.io/cloud-builders/kubectl'
  #   args: ['set', 'image', 'deployment/gcptest', 'gcptest=us-central1-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/gcptest:${SHORT_SHA}']
  #   env:
  #     - 'CLOUDSDK_COMPUTE_ZONE=us-central1-c'
  #     - 'CLOUDSDK_CONTAINER_CLUSTER=testapp'
